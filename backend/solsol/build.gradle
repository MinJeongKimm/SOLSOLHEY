plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.8'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.solsolhey'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	
	// JWT 인증
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
	
	// HTTP 클라이언트 (신한 API 연동용)
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	
	// Swagger/OpenAPI 문서화
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
	
	// Jakarta Annotations (PostConstruct 등)
	implementation 'jakarta.annotation:jakarta.annotation-api:3.0.0'
	
	// 환경변수는 Spring Boot에서 자동으로 .env 파일을 인식합니다

	// Google Gemini (GenAI) 클라이언트
	implementation 'com.google.genai:google-genai:1.0.0'
	
    // Lombok (pin version with record/@Builder support)
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
	
	// 개발/테스트용
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'com.h2database:h2' // 로컬 개발용
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
